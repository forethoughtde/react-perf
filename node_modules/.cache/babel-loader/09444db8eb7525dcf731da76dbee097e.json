{"ast":null,"code":"import _toConsumableArray from \"/Users/alexlobera/Projects/leanjscom/training/react-performance/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/alexlobera/Projects/leanjscom/training/react-performance/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alexlobera/Projects/leanjscom/training/react-performance/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alexlobera/Projects/leanjscom/training/react-performance/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alexlobera/Projects/leanjscom/training/react-performance/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alexlobera/Projects/leanjscom/training/react-performance/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/alexlobera/Projects/leanjscom/training/react-performance/src/example/TodoList.jsx\";\nimport React from \"react\";\nimport Todo from \"./Todo\";\nvar NUM_ITEMS = 2000;\nvar guid = 0;\nvar _items = [];\n\nfor (var i = 0; i < NUM_ITEMS; i++) {\n  _items.push({\n    id: ++guid,\n    text: \"item \".concat(guid)\n  });\n}\n\nvar TodoList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TodoList, _React$Component);\n\n  function TodoList() {\n    var _this;\n\n    _classCallCheck(this, TodoList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TodoList).call(this));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var item = {\n        id: ++guid,\n        text: e.target.elements[0].value\n      };\n      e.target.reset(); // Perf.start()\n\n      _this.setState({\n        items: [item].concat(_toConsumableArray(_this.state.items))\n      }, function () {// Perf.stop()\n        //Perf.printWasted()\n        // Perf.printInclusive()\n      });\n    };\n\n    _this.state = {\n      items: _items\n    };\n    return _this;\n  }\n\n  _createClass(TodoList, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        style: {\n          paddingTop: \"20px\",\n          paddingBottom: \"10px\"\n        },\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Todo 1 (\", NUM_ITEMS, \" items)\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"New task\"), React.createElement(\"input\", {\n        ref: \"input\",\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), React.createElement(\"ul\", {\n        className: \"list-unstyled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, this.state.items.map(function (item) {\n        return React.createElement(Todo, {\n          key: item.id,\n          text: item.text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return TodoList;\n}(React.Component);\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/alexlobera/Projects/leanjscom/training/react-performance/src/example/TodoList.jsx"],"names":["React","Todo","NUM_ITEMS","guid","_items","i","push","id","text","TodoList","handleSubmit","e","preventDefault","item","target","elements","value","reset","setState","items","state","paddingTop","paddingBottom","map","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,IAAMC,SAAS,GAAG,IAAlB;AAEA,IAAIC,IAAI,GAAG,CAAX;AAEA,IAAMC,MAAM,GAAG,EAAf;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAApB,EAA+BG,CAAC,EAAhC;AACED,EAAAA,MAAM,CAACE,IAAP,CAAY;AAAEC,IAAAA,EAAE,EAAE,EAAEJ,IAAR;AAAcK,IAAAA,IAAI,iBAAUL,IAAV;AAAlB,GAAZ;AADF;;IAGMM,Q;;;;;AACJ,sBAAc;AAAA;;AAAA;;AACZ;;AADY,UAOdC,YAPc,GAOC,UAAAC,CAAC,EAAI;AAClBA,MAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,IAAI,GAAG;AACXN,QAAAA,EAAE,EAAE,EAAEJ,IADK;AAEXK,QAAAA,IAAI,EAAEG,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkB,CAAlB,EAAqBC;AAFhB,OAAb;AAKAL,MAAAA,CAAC,CAACG,MAAF,CAASG,KAAT,GARkB,CASlB;;AAEA,YAAKC,QAAL,CACE;AACEC,QAAAA,KAAK,GAAGN,IAAH,4BAAY,MAAKO,KAAL,CAAWD,KAAvB;AADP,OADF,EAIE,YAAM,CACJ;AACA;AACA;AACD,OARH;AAUD,KA5Ba;;AAEZ,UAAKC,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAEf;AADI,KAAb;AAFY;AAKb;;;;6BAyBQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,KAAK,EAAE;AAAEiB,UAAAA,UAAU,EAAE,MAAd;AAAsBC,UAAAA,aAAa,EAAE;AAArC,SADT;AAEE,QAAA,QAAQ,EAAE,KAAKZ,YAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAaR,SAAb,YAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,EAME;AAAO,QAAA,GAAG,EAAC,OAAX;AAAmB,QAAA,SAAS,EAAC,cAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF,EASE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKkB,KAAL,CAAWD,KAAX,CAAiBI,GAAjB,CAAqB,UAAAV,IAAI;AAAA,eACxB,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,IAAI,CAACN,EAAhB;AAAoB,UAAA,IAAI,EAAEM,IAAI,CAACL,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADwB;AAAA,OAAzB,CADH,CATF,CADF;AAiBD;;;;EAjDoBR,KAAK,CAACwB,S;;AAoD7B,eAAef,QAAf","sourcesContent":["import React from \"react\";\nimport Todo from \"./Todo\";\n\nconst NUM_ITEMS = 2000;\n\nlet guid = 0;\n\nconst _items = [];\nfor (let i = 0; i < NUM_ITEMS; i++)\n  _items.push({ id: ++guid, text: `item ${guid}` });\n\nclass TodoList extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      items: _items\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const item = {\n      id: ++guid,\n      text: e.target.elements[0].value\n    };\n\n    e.target.reset();\n    // Perf.start()\n\n    this.setState(\n      {\n        items: [item, ...this.state.items]\n      },\n      () => {\n        // Perf.stop()\n        //Perf.printWasted()\n        // Perf.printInclusive()\n      }\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <form\n          style={{ paddingTop: \"20px\", paddingBottom: \"10px\" }}\n          onSubmit={this.handleSubmit}\n        >\n          <h2>Todo 1 ({NUM_ITEMS} items)</h2>\n          <h3>New task</h3>\n          <input ref=\"input\" className=\"form-control\" />\n        </form>\n        <ul className=\"list-unstyled\">\n          {this.state.items.map(item => (\n            <Todo key={item.id} text={item.text} />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}