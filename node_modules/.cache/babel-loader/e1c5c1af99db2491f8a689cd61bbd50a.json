{"ast":null,"code":"import _classCallCheck from \"/Users/alexlobera/Projects/leanjscom/training/react-performance/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alexlobera/Projects/leanjscom/training/react-performance/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alexlobera/Projects/leanjscom/training/react-performance/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alexlobera/Projects/leanjscom/training/react-performance/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alexlobera/Projects/leanjscom/training/react-performance/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/alexlobera/Projects/leanjscom/training/react-performance/src/example_4/List.jsx\";\nimport React from \"react\";\nimport ListItem from \"./ListItem\";\n\nvar List =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(List, _React$Component);\n\n  function List() {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this));\n\n    _this.handleScroll = function (event) {\n      _this.setState({\n        scrollTop: event.target.scrollTop\n      });\n    };\n\n    _this.state = {\n      availableHeight: 0,\n      scrollTop: 0\n    };\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"clientHeight\", this.wrapper.clientHeight);\n      this.setState({\n        availableHeight: this.wrapper.clientHeight\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          numRows = _this$props.numRows,\n          rowHeight = _this$props.rowHeight;\n      var totalHeight = rowHeight * numRows;\n      var _this$state = this.state,\n          availableHeight = _this$state.availableHeight,\n          scrollTop = _this$state.scrollTop;\n      var scrollBottom = scrollTop + availableHeight;\n      var startIndex = Math.max(0, Math.floor(scrollTop / rowHeight) - 20);\n      var endIndex = Math.min(numRows, Math.ceil(scrollBottom / rowHeight) + 20);\n      var items = [];\n      var index = startIndex;\n\n      while (index < endIndex) {\n        items.push(React.createElement(ListItem, {\n          index: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }));\n        index++;\n      }\n\n      return React.createElement(\"div\", {\n        style: {\n          height: \"100%\",\n          overflowY: \"scroll\"\n        },\n        ref: function ref(node) {\n          return _this2.wrapper = node;\n        },\n        onScroll: this.handleScroll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        style: {\n          paddingTop: startIndex * rowHeight,\n          pointerEvents: \"none\",\n          height: totalHeight\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, items));\n    }\n  }]);\n\n  return List;\n}(React.Component);\n\nexport default List;","map":{"version":3,"sources":["/Users/alexlobera/Projects/leanjscom/training/react-performance/src/example_4/List.jsx"],"names":["React","ListItem","List","handleScroll","event","setState","scrollTop","target","state","availableHeight","console","log","wrapper","clientHeight","props","numRows","rowHeight","totalHeight","scrollBottom","startIndex","Math","max","floor","endIndex","min","ceil","items","index","push","height","overflowY","node","paddingTop","pointerEvents","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;IAEMC,I;;;;;AACJ,kBAAc;AAAA;;AAAA;;AACZ;;AADY,UAgBdC,YAhBc,GAgBC,UAAAC,KAAK,EAAI;AACtB,YAAKC,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAEF,KAAK,CAACG,MAAN,CAAaD;AADZ,OAAd;AAGD,KApBa;;AAEZ,UAAKE,KAAL,GAAa;AACXC,MAAAA,eAAe,EAAE,CADN;AAEXH,MAAAA,SAAS,EAAE;AAFA,KAAb;AAFY;AAMb;;;;wCAEmB;AAClBI,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAKC,OAAL,CAAaC,YAAzC;AAEA,WAAKR,QAAL,CAAc;AACZI,QAAAA,eAAe,EAAE,KAAKG,OAAL,CAAaC;AADlB,OAAd;AAGD;;;6BAQQ;AAAA;;AAAA,wBACwB,KAAKC,KAD7B;AAAA,UACCC,OADD,eACCA,OADD;AAAA,UACUC,SADV,eACUA,SADV;AAEP,UAAMC,WAAW,GAAGD,SAAS,GAAGD,OAAhC;AAFO,wBAIgC,KAAKP,KAJrC;AAAA,UAICC,eAJD,eAICA,eAJD;AAAA,UAIkBH,SAJlB,eAIkBA,SAJlB;AAKP,UAAMY,YAAY,GAAGZ,SAAS,GAAGG,eAAjC;AAEA,UAAMU,UAAU,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACE,KAAL,CAAWhB,SAAS,GAAGU,SAAvB,IAAoC,EAAhD,CAAnB;AACA,UAAMO,QAAQ,GAAGH,IAAI,CAACI,GAAL,CACfT,OADe,EAEfK,IAAI,CAACK,IAAL,CAAUP,YAAY,GAAGF,SAAzB,IAAsC,EAFvB,CAAjB;AAKA,UAAMU,KAAK,GAAG,EAAd;AAEA,UAAIC,KAAK,GAAGR,UAAZ;;AACA,aAAOQ,KAAK,GAAGJ,QAAf,EAAyB;AACvBG,QAAAA,KAAK,CAACE,IAAN,CAAW,oBAAC,QAAD;AAAU,UAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAX;AACAA,QAAAA,KAAK;AACN;;AAED,aACE;AACE,QAAA,KAAK,EAAE;AAAEE,UAAAA,MAAM,EAAE,MAAV;AAAkBC,UAAAA,SAAS,EAAE;AAA7B,SADT;AAEE,QAAA,GAAG,EAAE,aAAAC,IAAI;AAAA,iBAAK,MAAI,CAACnB,OAAL,GAAemB,IAApB;AAAA,SAFX;AAGE,QAAA,QAAQ,EAAE,KAAK5B,YAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE;AACE,QAAA,KAAK,EAAE;AACL6B,UAAAA,UAAU,EAAEb,UAAU,GAAGH,SADpB;AAELiB,UAAAA,aAAa,EAAE,MAFV;AAGLJ,UAAAA,MAAM,EAAEZ;AAHH,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOGS,KAPH,CALF,CADF;AAiBD;;;;EA7DgB1B,KAAK,CAACkC,S;;AAgEzB,eAAehC,IAAf","sourcesContent":["import React from \"react\";\nimport ListItem from \"./ListItem\";\n\nclass List extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      availableHeight: 0,\n      scrollTop: 0\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"clientHeight\", this.wrapper.clientHeight);\n\n    this.setState({\n      availableHeight: this.wrapper.clientHeight\n    });\n  }\n\n  handleScroll = event => {\n    this.setState({\n      scrollTop: event.target.scrollTop\n    });\n  };\n\n  render() {\n    const { numRows, rowHeight } = this.props;\n    const totalHeight = rowHeight * numRows;\n\n    const { availableHeight, scrollTop } = this.state;\n    const scrollBottom = scrollTop + availableHeight;\n\n    const startIndex = Math.max(0, Math.floor(scrollTop / rowHeight) - 20);\n    const endIndex = Math.min(\n      numRows,\n      Math.ceil(scrollBottom / rowHeight) + 20\n    );\n\n    const items = [];\n\n    let index = startIndex;\n    while (index < endIndex) {\n      items.push(<ListItem index={index} />);\n      index++;\n    }\n\n    return (\n      <div\n        style={{ height: \"100%\", overflowY: \"scroll\" }}\n        ref={node => (this.wrapper = node)}\n        onScroll={this.handleScroll}\n      >\n        <ol\n          style={{\n            paddingTop: startIndex * rowHeight,\n            pointerEvents: \"none\",\n            height: totalHeight\n          }}\n        >\n          {items}\n        </ol>\n      </div>\n    );\n  }\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}