{"ast":null,"code":"import _classCallCheck from \"/Users/alexlobera/Projects/leanjscom/training/react-performance/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alexlobera/Projects/leanjscom/training/react-performance/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alexlobera/Projects/leanjscom/training/react-performance/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alexlobera/Projects/leanjscom/training/react-performance/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alexlobera/Projects/leanjscom/training/react-performance/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/alexlobera/Projects/leanjscom/training/react-performance/src/example_3/TodoForm.jsx\";\nimport React from \"react\";\n\nvar TodoForm =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(TodoForm, _React$PureComponent);\n\n  function TodoForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TodoForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TodoForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      inputValue: \"\"\n    };\n\n    _this.handleInputChange = function (e) {\n      _this.setState({\n        inputValue: e.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TodoForm, [{\n    key: \"render\",\n    value: function render() {\n      var handleInputChange = this.handleInputChange;\n      var handleSubmit = this.props.handleSubmit;\n      var inputValue = this.state.inputValue;\n      return React.createElement(\"form\", {\n        style: {\n          paddingTop: \"20px\",\n          paddingBottom: \"10px\"\n        },\n        onSubmit: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"New task\"), React.createElement(\"input\", {\n        value: inputValue,\n        onChange: handleInputChange,\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TodoForm;\n}(React.PureComponent);\n\nexport default TodoForm;","map":{"version":3,"sources":["/Users/alexlobera/Projects/leanjscom/training/react-performance/src/example_3/TodoForm.jsx"],"names":["React","TodoForm","state","inputValue","handleInputChange","e","setState","target","value","handleSubmit","props","paddingTop","paddingBottom","PureComponent"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,UAAU,EAAE;AADN,K;;UAIRC,iB,GAAoB,UAAAC,CAAC,EAAI;AACvB,YAAKC,QAAL,CAAc;AACZH,QAAAA,UAAU,EAAEE,CAAC,CAACE,MAAF,CAASC;AADT,OAAd;AAGD,K;;;;;;;6BAEQ;AAAA,UACCJ,iBADD,GACuB,IADvB,CACCA,iBADD;AAAA,UAECK,YAFD,GAEkB,KAAKC,KAFvB,CAECD,YAFD;AAAA,UAGCN,UAHD,GAGgB,KAAKD,KAHrB,CAGCC,UAHD;AAKP,aACE;AACE,QAAA,KAAK,EAAE;AAAEQ,UAAAA,UAAU,EAAE,MAAd;AAAsBC,UAAAA,aAAa,EAAE;AAArC,SADT;AAEE,QAAA,QAAQ,EAAEH,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,EAKE;AACE,QAAA,KAAK,EAAEN,UADT;AAEE,QAAA,QAAQ,EAAEC,iBAFZ;AAGE,QAAA,SAAS,EAAC,cAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AAaD;;;;EA7BoBJ,KAAK,CAACa,a;;AAgC7B,eAAeZ,QAAf","sourcesContent":["import React from \"react\";\n\nclass TodoForm extends React.PureComponent {\n  state = {\n    inputValue: \"\"\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      inputValue: e.target.value\n    });\n  };\n\n  render() {\n    const { handleInputChange } = this;\n    const { handleSubmit } = this.props;\n    const { inputValue } = this.state;\n\n    return (\n      <form\n        style={{ paddingTop: \"20px\", paddingBottom: \"10px\" }}\n        onSubmit={handleSubmit}\n      >\n        <h3>New task</h3>\n        <input\n          value={inputValue}\n          onChange={handleInputChange}\n          className=\"form-control\"\n        />\n      </form>\n    );\n  }\n}\n\nexport default TodoForm;\n"]},"metadata":{},"sourceType":"module"}