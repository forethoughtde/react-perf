{"ast":null,"code":"import _objectSpread from \"/Users/alexlobera/Projects/leanjscom/training/react-performance/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/alexlobera/Projects/leanjscom/training/react-performance/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/alexlobera/Projects/leanjscom/training/react-performance/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alexlobera/Projects/leanjscom/training/react-performance/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alexlobera/Projects/leanjscom/training/react-performance/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alexlobera/Projects/leanjscom/training/react-performance/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alexlobera/Projects/leanjscom/training/react-performance/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/alexlobera/Projects/leanjscom/training/react-performance/src/example_3/TodoList.jsx\";\nimport React from \"react\";\nimport Todo from \"./Todo\";\nimport TodoForm from \"./TodoForm\";\nimport { convertNumberToEnglish, createRange, createRandomUsers } from \"../utils\";\nvar NUM_ITEMS = 1000;\nvar guid = 0;\n\nvar TodoList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TodoList, _React$Component);\n\n  function TodoList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TodoList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TodoList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      items: createRange(NUM_ITEMS).map(function (n) {\n        return {\n          id: ++guid,\n          text: \"Task \".concat(convertNumberToEnglish(n + 1)),\n          users: createRandomUsers()\n        };\n      }),\n      inputValue: \"\"\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var item = {\n        id: ++guid,\n        text: e.target.elements[0].value,\n        users: createRandomUsers()\n      };\n\n      _this.setState(function (state) {\n        return {\n          items: [item].concat(_toConsumableArray(state.items)),\n          inputValue: \"\"\n        };\n      });\n    };\n\n    _this.removeUserFromTodo = function (_ref) {\n      var userId = _ref.userId,\n          todoId = _ref.todoId;\n\n      _this.setState(function (state) {\n        // const todoToUpdate = state.items.find(item => item.id === todoId);\n        // console.log(\"user A\", todoToUpdate.users);\n        // todoToUpdate.users = todoToUpdate.users.filter(\n        //   user => user.id !== userId\n        // );\n        // console.log(\"user B\", todoToUpdate.users);\n        var indexTodoToUpdate = state.items.findIndex(function (item) {\n          return item.id === todoId;\n        });\n\n        var newTodo = _objectSpread({}, state.items[indexTodoToUpdate]);\n\n        return {\n          items: state.items,\n          inputValue: \"\"\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TodoList, [{\n    key: \"render\",\n    value: function render() {\n      var handleSubmit = this.handleSubmit,\n          removeUserFromTodo = this.removeUserFromTodo;\n      var items = this.state.items;\n      return React.createElement(\"div\", {\n        style: {\n          width: \"600px\",\n          margin: \"0 auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Todo 1 (\", NUM_ITEMS, \" items)\"), React.createElement(TodoForm, {\n        handleSubmit: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        className: \"list-unstyled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, items.map(function (item) {\n        return React.createElement(Todo, {\n          removeUserFromTodo: removeUserFromTodo,\n          key: item.id,\n          data: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return TodoList;\n}(React.Component);\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/alexlobera/Projects/leanjscom/training/react-performance/src/example_3/TodoList.jsx"],"names":["React","Todo","TodoForm","convertNumberToEnglish","createRange","createRandomUsers","NUM_ITEMS","guid","TodoList","state","items","map","n","id","text","users","inputValue","handleSubmit","e","preventDefault","item","target","elements","value","setState","removeUserFromTodo","userId","todoId","indexTodoToUpdate","findIndex","newTodo","width","margin","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Todo from \"./Todo\";\nimport TodoForm from \"./TodoForm\";\nimport {\n  convertNumberToEnglish,\n  createRange,\n  createRandomUsers\n} from \"../utils\";\n\nconst NUM_ITEMS = 1000;\nlet guid = 0;\n\nclass TodoList extends React.Component {\n  state = {\n    items: createRange(NUM_ITEMS).map(n => ({\n      id: ++guid,\n      text: `Task ${convertNumberToEnglish(n + 1)}`,\n      users: createRandomUsers()\n    })),\n    inputValue: \"\"\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const item = {\n      id: ++guid,\n      text: e.target.elements[0].value,\n      users: createRandomUsers()\n    };\n\n    this.setState(state => ({\n      items: [item, ...state.items],\n      inputValue: \"\"\n    }));\n  };\n\n  removeUserFromTodo = ({ userId, todoId }) => {\n    this.setState(state => {\n      // const todoToUpdate = state.items.find(item => item.id === todoId);\n      // console.log(\"user A\", todoToUpdate.users);\n      // todoToUpdate.users = todoToUpdate.users.filter(\n      //   user => user.id !== userId\n      // );\n      // console.log(\"user B\", todoToUpdate.users);\n      const indexTodoToUpdate = state.items.findIndex(\n        item => item.id === todoId\n      );\n      const newTodo = { ...state.items[indexTodoToUpdate] };\n      return {\n        items: state.items,\n        inputValue: \"\"\n      };\n    });\n  };\n\n  render() {\n    const { handleSubmit, removeUserFromTodo } = this;\n    const { items } = this.state;\n\n    return (\n      <div style={{ width: \"600px\", margin: \"0 auto\" }}>\n        <h2>Todo 1 ({NUM_ITEMS} items)</h2>\n        <TodoForm handleSubmit={handleSubmit} />\n        <ul className=\"list-unstyled\">\n          {items.map(item => (\n            <Todo\n              removeUserFromTodo={removeUserFromTodo}\n              key={item.id}\n              data={item}\n            />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}